{"ast":null,"code":"var _jsxFileName = \"/Users/michellehowa/MITxPRO/Mod13/build-a-formik-form_starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values => {\n      alert(\"Login Successful\");\n      //console.log(\"form: \", values);\n    },\n\n    validate: values => {\n      let errors = {};\n      if (!values.emailField) {\n        errors.emailField = \"Field required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) {\n        errors.emailField = \"Username should be an email\";\n      } else if (!values.pswField) errors.pswField = \"Field required\";\n      return errors;\n    }\n  });\n  // TODO: add a const called formik assigned to useFormik()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), formik.errors.emailField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        name: \"emailError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), formik.errors.emailField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        name: \"pswError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","emailField","pswField","onSubmit","values","alert","validate","errors","test","children","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","name","type","onChange","handleChange","value","style","color","_c","$RefreshReg$"],"sources":["/Users/michellehowa/MITxPRO/Mod13/build-a-formik-form_starter/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport {useFormik} from 'formik';\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values => {\n      alert(\"Login Successful\");\n      //console.log(\"form: \", values);\n    },\n    validate: values => {\n      let errors = {};\n      if(!values.emailField) {errors.emailField = \"Field required\"} else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) {\n        errors.emailField = \"Username should be an email\"\n      } else if(!values.pswField) errors.pswField = \"Field required\"\n      return errors;\n    }\n  })\n  // TODO: add a const called formik assigned to useFormik()\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Username</div>\n        <input name=\"emailField\" type=\"text\" onChange={formik.handleChange} value={formik.values.emailField}/>\n        {formik.errors.emailField ? <div name=\"emailError\" style={{color: 'red'}}>{formik.errors.emailField}</div>: null}\n        <div>Password</div>\n        <input name=\"pswField\" type=\"text\" onChange={formik.handleChange} value={formik.values.pswField}/>\n        {formik.errors.emailField ? <div name=\"pswError\" style={{color: 'red'}}>{formik.errors.pswField}</div>: null}\n        <button name=\"submitBtn\" type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}